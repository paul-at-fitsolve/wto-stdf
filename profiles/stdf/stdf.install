<?php
/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function stdf_install() {
  // Enable some stdf blocks.
  $default_theme = 'wto_stdf';
  $admin_theme = 'seven';
  // disable all themes
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();
  // enable $default_theme
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $default_theme)
    ->execute();
  // enable $admin_theme
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  variable_set('admin_theme', $admin_theme);
  // activate admin theme when editing a node
  variable_set('node_admin_theme', '1');
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
      array(
          'module' => 'locale',
          'delta' => 'language',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => -20,
          'region' => 'header',
          'pages' => '',
          'cache' => -1,
      ),
      array(
          'module' => 'search',
          'delta' => 'form',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => -19,
          'region' => 'header',
          'pages' => '',
          'cache' => -1,
      ),
      array(
          'module' => 'superfish',
          'delta' => '1',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => -18,
          'region' => 'header',
          'pages' => '',
          'cache' => -1,
      ),   
      array(
          'module' => 'gmap_location',
          'delta' => '0',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => 0,
          'region' => 'content',
          'pages' => '',
          'cache' => -1,
      ),
      array(
          'module' => 'mailchimp_lists',
          'delta' => 'stdf_mail_list',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => 0,
          'region' => 'content',
          'pages' => '',
          'cache' => 2,
      ),
      array(
          'module' => 'views',
          'delta' => 'beneficiaries-block_1',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => 0,
          'region' => 'content',
          'pages' => '',
          'cache' => -1,
      ),
      array(
          'module' => 'current_search',
          'delta' => 'standard',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => 0,
          'region' => 'sidebar_second',
          'pages' => '<front>',
          'cache' => -1,
      ),
      array(
          'module' => 'views',
          'delta' => 'calendar-block_2',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => -16,
          'region' => 'sidebar_second',
          'pages' => '',
          'title' => 'Upcoming events',
          'cache' => -1,
      ),
      array(
          'module' => 'views',
          'delta' => 'projects-block_1',
          'theme' => $default_theme,
          'status' => 1,
          'weight' => -0,
          'region' => 'sidebar_second',
          'pages' => '',
          'cache' => -1,
      ),
  );
  // drop system / user blocks to ensure correct building
  db_delete('block')->condition('module', 'system')->execute();
  db_delete('block')->condition('module', 'user')->execute();
  db_delete('block')->condition('module', 'locale')->execute();
  db_delete('block')->condition('module', 'search')->execute();
  db_delete('block')->condition('module', 'superfish')->execute();
  db_delete('block')->condition('module', 'gmap_location')->execute();
  db_delete('block')->condition('module', 'mailchimp_lists')->execute();
  db_delete('block')->condition('module', 'views')->execute();
  db_delete('block')->condition('module', 'current_search')->execute();
  
  
  // add in our blocks defined above
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();
  
  // From shortcut.install, add shortcuts to the default set on install
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links = NULL;
  $shortcut_set->links = array(
    array(
      'link_path' => 'admin/appearance/settings',
      'link_title' => st('Theme'),
      'weight' => -17,
    ),
  );
  shortcut_set_save($shortcut_set);// Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 10;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
  // Update the menu router information.
  menu_rebuild();
  // revert features to ensure they are all installed
  $features = array(
    'feature_multilingual',
    'feature_apache_solr_search',
    'feature_general_content',
    'feature_event_calendar',
    'feature_mailchimp_integration',
    'feature_members_content',
    'feature_node_queue',
    'feature_project_lists',
    'feature_video_gallery',
    'feature_virtual_library'
  );
  features_revert($features);
  // ignore any rebuild messages
  node_access_needs_rebuild(FALSE);
  // ignore any other install messages
  drupal_get_messages();
}